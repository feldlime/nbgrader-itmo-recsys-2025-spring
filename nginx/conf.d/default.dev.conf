# Define upstream servers
upstream puller {
    server puller:8501;  # Using service name from docker-compose
}

upstream jupyter {
    server nbgrader:9999;  # Using service name from docker-compose
}

# Development HTTP server (no SSL, no OAuth)
server {
    listen 80;
    server_name localhost;

    client_max_body_size 20M;  # Allow larger file uploads

    # Streamlit application (GitHub Puller)
    location / {
        proxy_pass http://puller;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_buffering off;
    }

    location = /jupyter {
        return 301 $scheme://$host/jupyter/;
    }

    # Jupyter Notebook
    location /jupyter/ {
        proxy_http_version 1.1;
        proxy_pass http://jupyter;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;

        proxy_set_header Origin "";
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 'healthy\n';
    }
}
