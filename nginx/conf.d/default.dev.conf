# Define upstream servers
upstream streamlit {
    server puller:8501;  # Using service name from docker-compose
}

upstream jupyter {
    server jupyter:9999;  # Using service name from docker-compose
}

upstream oauth2-proxy {
    server oauth2-proxy:4180;  # OAuth2 proxy service
}

# Development HTTP server (no SSL)
server {
    listen 80;
    server_name localhost;

    client_max_body_size 20M;  # Allow larger file uploads

    # OAuth2 endpoints
    location /oauth2/ {
        proxy_pass       http://oauth2-proxy;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Auth-Request-Redirect $request_uri;
    }

    # OAuth2 authentication request
    location = /oauth2/auth {
        proxy_pass       http://oauth2-proxy;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header Content-Length "";
        proxy_pass_request_body off;
    }

    # Streamlit application (GitHub Puller)
    location / {
        auth_request /oauth2/auth;
        auth_request_set $user   $upstream_http_x_auth_request_user;
        auth_request_set $email  $upstream_http_x_auth_request_email;
        auth_request_set $token  $upstream_http_x_auth_request_access_token;

        proxy_set_header X-User  $user;
        proxy_set_header X-Email $email;
        proxy_set_header X-Access-Token $token;

        error_page 401 = /oauth2/sign_in;

        proxy_pass http://streamlit;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_buffering off;
    }

    # Jupyter Notebook (protected by OAuth2)
    location /jupyter/ {
        auth_request /oauth2/auth;
        auth_request_set $user   $upstream_http_x_auth_request_user;
        auth_request_set $email  $upstream_http_x_auth_request_email;
        auth_request_set $token  $upstream_http_x_auth_request_access_token;

        proxy_set_header X-User  $user;
        proxy_set_header X-Email $email;
        proxy_set_header X-Access-Token $token;

        error_page 401 = /oauth2/sign_in;

        proxy_pass http://jupyter/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_buffering off;
    }

    # Health check endpoint (unprotected)
    location /health {
        access_log off;
        return 200 'healthy\n';
    }
}
